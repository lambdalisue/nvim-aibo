name: Lua CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Lua and LuaRocks
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.1"

      - name: Setup LuaRocks
        uses: leafo/gh-actions-luarocks@v4

      - name: Install Luacheck
        run: luarocks install luacheck

      - name: Install lua-language-server
        run: |
          # Get the latest release version
          LATEST_VERSION=$(curl -s https://api.github.com/repos/LuaLS/lua-language-server/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "Installing lua-language-server version: $LATEST_VERSION"

          # Download and extract
          wget "https://github.com/LuaLS/lua-language-server/releases/latest/download/lua-language-server-${LATEST_VERSION}-linux-x64.tar.gz"
          tar -xzf "lua-language-server-${LATEST_VERSION}-linux-x64.tar.gz"

          # List contents to see structure
          echo "Archive contents:"
          ls -la

          # Find the actual binary location
          if [ -f "bin/lua-language-server" ]; then
            BINARY_PATH="bin/lua-language-server"
          elif [ -f "lua-language-server" ]; then
            BINARY_PATH="lua-language-server"
          else
            echo "Looking for lua-language-server binary..."
            find . -name "lua-language-server" -type f
            BINARY_PATH=$(find . -name "lua-language-server" -type f | head -1)
          fi

          # Install binary
          if [ -n "$BINARY_PATH" ] && [ -f "$BINARY_PATH" ]; then
            echo "Installing binary from: $BINARY_PATH"
            sudo cp "$BINARY_PATH" /usr/local/bin/
            sudo chmod +x /usr/local/bin/lua-language-server
            echo "Installation completed"
          else
            echo "Error: lua-language-server binary not found!"
            exit 1
          fi

      - name: Install Just command runner
        uses: taiki-e/install-action@v2
        with:
          tool: just

      - name: Run comprehensive linting
        run: just lint

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install StyLua
        uses: JohnnyMorganz/stylua-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --check lua/

      - name: Check formatting
        if: failure()
        run: echo "::error::Code is not formatted. Run 'stylua lua/' locally to format."

